
joystick_input.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  0000090e  000009a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000090e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800142  00800142  000009e4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ccb  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f5  00000000  00000000  000017db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000050a  00000000  00000000  000020d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  000025dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fd  00000000  00000000  00002724  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000033d  00000000  00000000  00002c21  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002f5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c1 c0       	rjmp	.+386    	; 0x1b8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e0       	ldi	r30, 0x0E	; 14
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 34       	cpi	r26, 0x42	; 66
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e4       	ldi	r26, 0x42	; 66
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 34       	cpi	r26, 0x47	; 71
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e8 d0       	rcall	.+464    	; 0x294 <main>
  c4:	22 c4       	rjmp	.+2116   	; 0x90a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
}
void TimerOff() {
	TCCR1B = 0x00;
}
void TimerISR() {
	TimerFlag = 1;
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	5e 98       	cbi	0x0b, 6	; 11
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	5f 9a       	sbi	0x0b, 7	; 11
  f4:	00 00       	nop
  f6:	5f 98       	cbi	0x0b, 7	; 11
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_Cursor>:
 106:	81 31       	cpi	r24, 0x11	; 17
 108:	18 f4       	brcc	.+6      	; 0x110 <LCD_Cursor+0xa>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret
 110:	81 55       	subi	r24, 0x51	; 81
 112:	ed cf       	rjmp	.-38     	; 0xee <LCD_WriteCommand>
 114:	08 95       	ret

00000116 <LCD_init>:
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	d6 df       	rcall	.-84     	; 0xc8 <delay_ms>
 11c:	88 e3       	ldi	r24, 0x38	; 56
 11e:	e7 df       	rcall	.-50     	; 0xee <LCD_WriteCommand>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	e5 df       	rcall	.-54     	; 0xee <LCD_WriteCommand>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	e3 df       	rcall	.-58     	; 0xee <LCD_WriteCommand>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	e1 df       	rcall	.-62     	; 0xee <LCD_WriteCommand>
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>
 132:	08 95       	ret

00000134 <LCD_WriteData>:
 134:	5e 9a       	sbi	0x0b, 6	; 11
 136:	88 b9       	out	0x08, r24	; 8
 138:	5f 9a       	sbi	0x0b, 7	; 11
 13a:	00 00       	nop
 13c:	5f 98       	cbi	0x0b, 7	; 11
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	c2 cf       	rjmp	.-124    	; 0xc8 <delay_ms>
 144:	08 95       	ret

00000146 <LCD_DisplayString>:
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	d6 df       	rcall	.-84     	; 0x100 <LCD_ClearScreen>
 154:	88 81       	ld	r24, Y
 156:	88 23       	and	r24, r24
 158:	51 f0       	breq	.+20     	; 0x16e <LCD_DisplayString+0x28>
 15a:	01 e0       	ldi	r16, 0x01	; 1
 15c:	01 0f       	add	r16, r17
 15e:	81 2f       	mov	r24, r17
 160:	d2 df       	rcall	.-92     	; 0x106 <LCD_Cursor>
 162:	89 91       	ld	r24, Y+
 164:	e7 df       	rcall	.-50     	; 0x134 <LCD_WriteData>
 166:	10 2f       	mov	r17, r16
 168:	88 81       	ld	r24, Y
 16a:	81 11       	cpse	r24, r1
 16c:	f6 cf       	rjmp	.-20     	; 0x15a <LCD_DisplayString+0x14>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <TimerOn>:
 178:	8b e0       	ldi	r24, 0x0B	; 11
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17e:	8d e7       	ldi	r24, 0x7D	; 125
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 186:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 190:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 194:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 198:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 19c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a0:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 1a4:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 1a8:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <__data_end+0x2>
 1ac:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <__data_end+0x3>
 1b0:	8f b7       	in	r24, 0x3f	; 63
 1b2:	80 68       	ori	r24, 0x80	; 128
 1b4:	8f bf       	out	0x3f, r24	; 63
 1b6:	08 95       	ret

000001b8 <__vector_13>:
}
ISR(TIMER1_COMPA_vect) {
 1b8:	1f 92       	push	r1
 1ba:	0f 92       	push	r0
 1bc:	0f b6       	in	r0, 0x3f	; 63
 1be:	0f 92       	push	r0
 1c0:	11 24       	eor	r1, r1
 1c2:	8f 93       	push	r24
 1c4:	9f 93       	push	r25
 1c6:	af 93       	push	r26
 1c8:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 1ca:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 1ce:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 1d2:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <__data_end+0x2>
 1d6:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <__data_end+0x3>
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	a1 09       	sbc	r26, r1
 1de:	b1 09       	sbc	r27, r1
 1e0:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 1e4:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 1e8:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <__data_end+0x2>
 1ec:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <__data_end+0x3>
	if (_avr_timer_cntcurr == 0) {
 1f0:	89 2b       	or	r24, r25
 1f2:	8a 2b       	or	r24, r26
 1f4:	8b 2b       	or	r24, r27
 1f6:	99 f4       	brne	.+38     	; 0x21e <__vector_13+0x66>
}
void TimerOff() {
	TCCR1B = 0x00;
}
void TimerISR() {
	TimerFlag = 1;
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <TimerFlag>
}
ISR(TIMER1_COMPA_vect) {
	_avr_timer_cntcurr--;
	if (_avr_timer_cntcurr == 0) {
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 202:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 206:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 20a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 20e:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 212:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 216:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <__data_end+0x2>
 21a:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <__data_end+0x3>
	}
}
 21e:	bf 91       	pop	r27
 220:	af 91       	pop	r26
 222:	9f 91       	pop	r25
 224:	8f 91       	pop	r24
 226:	0f 90       	pop	r0
 228:	0f be       	out	0x3f, r0	; 63
 22a:	0f 90       	pop	r0
 22c:	1f 90       	pop	r1
 22e:	18 95       	reti

00000230 <TimerSet>:
void TimerSet(unsigned long M) {
	//Set TimerISR() to tick every M ms
	_avr_timer_M = M;
 230:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 234:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 238:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 23c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 240:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <__data_end>
 244:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <__data_end+0x1>
 248:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end+0x2>
 24c:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x3>
 250:	08 95       	ret

00000252 <ADC_init>:
}

void ADC_init() {
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
 252:	ea e7       	ldi	r30, 0x7A	; 122
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	80 6e       	ori	r24, 0xE0	; 224
 25a:	80 83       	st	Z, r24
 25c:	08 95       	ret

0000025e <ADC_Read>:

int ADC_Read(char channel)
{
	int ADC_value;
	
	ADMUX = (0x40) | (channel & 0x07);/* set input channel to read */
 25e:	87 70       	andi	r24, 0x07	; 7
 260:	80 64       	ori	r24, 0x40	; 64
 262:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);	/* start conversion */
 266:	ea e7       	ldi	r30, 0x7A	; 122
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	80 64       	ori	r24, 0x40	; 64
 26e:	80 83       	st	Z, r24
	while((ADCSRA &(1<<ADIF))== 0);	/* monitor end of conversion interrupt flag */
 270:	80 81       	ld	r24, Z
 272:	84 ff       	sbrs	r24, 4
 274:	fd cf       	rjmp	.-6      	; 0x270 <ADC_Read+0x12>
	
	ADCSRA |= (1<<ADIF);	/* clear interrupt flag */
 276:	ea e7       	ldi	r30, 0x7A	; 122
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	80 81       	ld	r24, Z
 27c:	80 61       	ori	r24, 0x10	; 16
 27e:	80 83       	st	Z, r24
	ADC_value = (int)ADCL;	/* read lower byte */
 280:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	ADC_value = ADC_value + (int)ADCH*256;/* read higher 2 bits, Multiply with weightage */
 284:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>

	return ADC_value;		/* return digital value */
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	98 2f       	mov	r25, r24
 28c:	88 27       	eor	r24, r24
}
 28e:	82 0f       	add	r24, r18
 290:	91 1d       	adc	r25, r1
 292:	08 95       	ret

00000294 <main>:

int main(void)
{
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	a8 97       	sbiw	r28, 0x28	; 40
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00; PORTA = 0x04;
 2a8:	11 b8       	out	0x01, r1	; 1
 2aa:	84 e0       	ldi	r24, 0x04	; 4
 2ac:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	87 b9       	out	0x07, r24	; 7
 2b2:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 2b4:	8a b9       	out	0x0a, r24	; 10
 2b6:	1b b8       	out	0x0b, r1	; 11
	
	char buffer[40];
	int ADC_Value1;
	int ADC_Value2;
	
	ADC_init();		/* Initialize ADC */
 2b8:	cc df       	rcall	.-104    	; 0x252 <ADC_init>
	LCD_init();		/* Initialize LCD */
 2ba:	2d df       	rcall	.-422    	; 0x116 <LCD_init>
	LCD_ClearScreen();
 2bc:	21 df       	rcall	.-446    	; 0x100 <LCD_ClearScreen>
 2be:	64 e6       	ldi	r22, 0x64	; 100
	//LCD_DisplayString(1, "X:              Y: ");
	TimerSet(100);
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	b4 df       	rcall	.-152    	; 0x230 <TimerSet>
	TimerOn();
 2c8:	57 df       	rcall	.-338    	; 0x178 <TimerOn>
 2ca:	0f 2e       	mov	r0, r31
		
		if (click) {
			sprintf(buffer, "X=%d   Y=%d    Button pressed ", ADC_Value1, ADC_Value2);
		}
		else {
			sprintf(buffer, "X=%d   Y=%d    Button release", ADC_Value1, ADC_Value2);
 2cc:	f3 e2       	ldi	r31, 0x23	; 35
 2ce:	cf 2e       	mov	r12, r31
 2d0:	f1 e0       	ldi	r31, 0x01	; 1
 2d2:	df 2e       	mov	r13, r31
 2d4:	f0 2d       	mov	r31, r0
 2d6:	8e 01       	movw	r16, r28
 2d8:	0f 5f       	subi	r16, 0xFF	; 255
 2da:	1f 4f       	sbci	r17, 0xFF	; 255
 2dc:	0f 2e       	mov	r0, r31
		unsigned click = ~PINA & 0x04;
		ADC_Value1 = ADC_Read(0);/* Read the status on X-OUT pin using channel 0 */
		ADC_Value2 = ADC_Read(1);/* Read the status on Y-OUT pin using channel 0 */
		
		if (click) {
			sprintf(buffer, "X=%d   Y=%d    Button pressed ", ADC_Value1, ADC_Value2);
 2de:	f4 e0       	ldi	r31, 0x04	; 4
 2e0:	ef 2e       	mov	r14, r31
 2e2:	f1 e0       	ldi	r31, 0x01	; 1
 2e4:	ff 2e       	mov	r15, r31
 2e6:	f0 2d       	mov	r31, r0
	TimerSet(100);
	TimerOn();
	
	while(1)
	{
		unsigned click = ~PINA & 0x04;
 2e8:	b0 b0       	in	r11, 0x00	; 0
		ADC_Value1 = ADC_Read(0);/* Read the status on X-OUT pin using channel 0 */
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	b8 df       	rcall	.-144    	; 0x25e <ADC_Read>
 2ee:	a8 2e       	mov	r10, r24
 2f0:	99 2e       	mov	r9, r25
		ADC_Value2 = ADC_Read(1);/* Read the status on Y-OUT pin using channel 0 */
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	b4 df       	rcall	.-152    	; 0x25e <ADC_Read>
 2f6:	2b 2d       	mov	r18, r11
		
		if (click) {
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	20 95       	com	r18
 2fc:	30 95       	com	r19
 2fe:	22 ff       	sbrs	r18, 2
 300:	0f c0       	rjmp	.+30     	; 0x320 <main+0x8c>
 302:	9f 93       	push	r25
			sprintf(buffer, "X=%d   Y=%d    Button pressed ", ADC_Value1, ADC_Value2);
 304:	8f 93       	push	r24
 306:	9f 92       	push	r9
 308:	af 92       	push	r10
 30a:	ff 92       	push	r15
 30c:	ef 92       	push	r14
 30e:	1f 93       	push	r17
 310:	0f 93       	push	r16
 312:	20 d0       	rcall	.+64     	; 0x354 <sprintf>
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	0e c0       	rjmp	.+28     	; 0x33c <main+0xa8>
 320:	9f 93       	push	r25
		}
		else {
			sprintf(buffer, "X=%d   Y=%d    Button release", ADC_Value1, ADC_Value2);
 322:	8f 93       	push	r24
 324:	9f 92       	push	r9
 326:	af 92       	push	r10
 328:	df 92       	push	r13
 32a:	cf 92       	push	r12
 32c:	1f 93       	push	r17
 32e:	0f 93       	push	r16
 330:	11 d0       	rcall	.+34     	; 0x354 <sprintf>
 332:	0f b6       	in	r0, 0x3f	; 63
 334:	f8 94       	cli
 336:	de bf       	out	0x3e, r29	; 62
 338:	0f be       	out	0x3f, r0	; 63
		}
		
		LCD_DisplayString(1, buffer);
 33a:	cd bf       	out	0x3d, r28	; 61
 33c:	b8 01       	movw	r22, r16
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	02 df       	rcall	.-508    	; 0x146 <LCD_DisplayString>
		LCD_Cursor(24);
 342:	88 e1       	ldi	r24, 0x18	; 24
 344:	e0 de       	rcall	.-576    	; 0x106 <LCD_Cursor>
 346:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <TimerFlag>
		while (!TimerFlag) {};	// Wait 300ms
 34a:	88 23       	and	r24, r24
 34c:	e1 f3       	breq	.-8      	; 0x346 <main+0xb2>
 34e:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <TimerFlag>
		TimerFlag = 0;
 352:	ca cf       	rjmp	.-108    	; 0x2e8 <main+0x54>

00000354 <sprintf>:
	}
 354:	0f 93       	push	r16
 356:	1f 93       	push	r17
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	cd b7       	in	r28, 0x3d	; 61
 35e:	de b7       	in	r29, 0x3e	; 62
 360:	2e 97       	sbiw	r28, 0x0e	; 14
 362:	0f b6       	in	r0, 0x3f	; 63
 364:	f8 94       	cli
 366:	de bf       	out	0x3e, r29	; 62
 368:	0f be       	out	0x3f, r0	; 63
 36a:	cd bf       	out	0x3d, r28	; 61
 36c:	0d 89       	ldd	r16, Y+21	; 0x15
 36e:	1e 89       	ldd	r17, Y+22	; 0x16
 370:	86 e0       	ldi	r24, 0x06	; 6
 372:	8c 83       	std	Y+4, r24	; 0x04
 374:	1a 83       	std	Y+2, r17	; 0x02
 376:	09 83       	std	Y+1, r16	; 0x01
 378:	8f ef       	ldi	r24, 0xFF	; 255
 37a:	9f e7       	ldi	r25, 0x7F	; 127
 37c:	9e 83       	std	Y+6, r25	; 0x06
 37e:	8d 83       	std	Y+5, r24	; 0x05
 380:	ae 01       	movw	r20, r28
 382:	47 5e       	subi	r20, 0xE7	; 231
 384:	5f 4f       	sbci	r21, 0xFF	; 255
 386:	6f 89       	ldd	r22, Y+23	; 0x17
 388:	78 8d       	ldd	r23, Y+24	; 0x18
 38a:	ce 01       	movw	r24, r28
 38c:	01 96       	adiw	r24, 0x01	; 1
 38e:	10 d0       	rcall	.+32     	; 0x3b0 <vfprintf>
 390:	ef 81       	ldd	r30, Y+7	; 0x07
 392:	f8 85       	ldd	r31, Y+8	; 0x08
 394:	e0 0f       	add	r30, r16
 396:	f1 1f       	adc	r31, r17
 398:	10 82       	st	Z, r1
 39a:	2e 96       	adiw	r28, 0x0e	; 14
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	f8 94       	cli
 3a0:	de bf       	out	0x3e, r29	; 62
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	cd bf       	out	0x3d, r28	; 61
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	08 95       	ret

000003b0 <vfprintf>:
 3b0:	2f 92       	push	r2
 3b2:	3f 92       	push	r3
 3b4:	4f 92       	push	r4
 3b6:	5f 92       	push	r5
 3b8:	6f 92       	push	r6
 3ba:	7f 92       	push	r7
 3bc:	8f 92       	push	r8
 3be:	9f 92       	push	r9
 3c0:	af 92       	push	r10
 3c2:	bf 92       	push	r11
 3c4:	cf 92       	push	r12
 3c6:	df 92       	push	r13
 3c8:	ef 92       	push	r14
 3ca:	ff 92       	push	r15
 3cc:	0f 93       	push	r16
 3ce:	1f 93       	push	r17
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	cd b7       	in	r28, 0x3d	; 61
 3d6:	de b7       	in	r29, 0x3e	; 62
 3d8:	2b 97       	sbiw	r28, 0x0b	; 11
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
 3e4:	6c 01       	movw	r12, r24
 3e6:	7b 01       	movw	r14, r22
 3e8:	8a 01       	movw	r16, r20
 3ea:	fc 01       	movw	r30, r24
 3ec:	17 82       	std	Z+7, r1	; 0x07
 3ee:	16 82       	std	Z+6, r1	; 0x06
 3f0:	83 81       	ldd	r24, Z+3	; 0x03
 3f2:	81 ff       	sbrs	r24, 1
 3f4:	bf c1       	rjmp	.+894    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 3f6:	ce 01       	movw	r24, r28
 3f8:	01 96       	adiw	r24, 0x01	; 1
 3fa:	3c 01       	movw	r6, r24
 3fc:	f6 01       	movw	r30, r12
 3fe:	93 81       	ldd	r25, Z+3	; 0x03
 400:	f7 01       	movw	r30, r14
 402:	93 fd       	sbrc	r25, 3
 404:	85 91       	lpm	r24, Z+
 406:	93 ff       	sbrs	r25, 3
 408:	81 91       	ld	r24, Z+
 40a:	7f 01       	movw	r14, r30
 40c:	88 23       	and	r24, r24
 40e:	09 f4       	brne	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 410:	ad c1       	rjmp	.+858    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	39 f4       	brne	.+14     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 416:	93 fd       	sbrc	r25, 3
 418:	85 91       	lpm	r24, Z+
 41a:	93 ff       	sbrs	r25, 3
 41c:	81 91       	ld	r24, Z+
 41e:	7f 01       	movw	r14, r30
 420:	85 32       	cpi	r24, 0x25	; 37
 422:	21 f4       	brne	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 424:	b6 01       	movw	r22, r12
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	d6 d1       	rcall	.+940    	; 0x7d6 <fputc>
 42a:	e8 cf       	rjmp	.-48     	; 0x3fc <vfprintf+0x4c>
 42c:	91 2c       	mov	r9, r1
 42e:	21 2c       	mov	r2, r1
 430:	31 2c       	mov	r3, r1
 432:	ff e1       	ldi	r31, 0x1F	; 31
 434:	f3 15       	cp	r31, r3
 436:	d8 f0       	brcs	.+54     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 438:	8b 32       	cpi	r24, 0x2B	; 43
 43a:	79 f0       	breq	.+30     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 43c:	38 f4       	brcc	.+14     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 43e:	80 32       	cpi	r24, 0x20	; 32
 440:	79 f0       	breq	.+30     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 442:	83 32       	cpi	r24, 0x23	; 35
 444:	a1 f4       	brne	.+40     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 446:	23 2d       	mov	r18, r3
 448:	20 61       	ori	r18, 0x10	; 16
 44a:	1d c0       	rjmp	.+58     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 44c:	8d 32       	cpi	r24, 0x2D	; 45
 44e:	61 f0       	breq	.+24     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 450:	80 33       	cpi	r24, 0x30	; 48
 452:	69 f4       	brne	.+26     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 454:	23 2d       	mov	r18, r3
 456:	21 60       	ori	r18, 0x01	; 1
 458:	16 c0       	rjmp	.+44     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 45a:	83 2d       	mov	r24, r3
 45c:	82 60       	ori	r24, 0x02	; 2
 45e:	38 2e       	mov	r3, r24
 460:	e3 2d       	mov	r30, r3
 462:	e4 60       	ori	r30, 0x04	; 4
 464:	3e 2e       	mov	r3, r30
 466:	2a c0       	rjmp	.+84     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 468:	f3 2d       	mov	r31, r3
 46a:	f8 60       	ori	r31, 0x08	; 8
 46c:	1d c0       	rjmp	.+58     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 46e:	37 fc       	sbrc	r3, 7
 470:	2d c0       	rjmp	.+90     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 472:	20 ed       	ldi	r18, 0xD0	; 208
 474:	28 0f       	add	r18, r24
 476:	2a 30       	cpi	r18, 0x0A	; 10
 478:	40 f0       	brcs	.+16     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 47a:	8e 32       	cpi	r24, 0x2E	; 46
 47c:	b9 f4       	brne	.+46     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 47e:	36 fc       	sbrc	r3, 6
 480:	75 c1       	rjmp	.+746    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 482:	23 2d       	mov	r18, r3
 484:	20 64       	ori	r18, 0x40	; 64
 486:	32 2e       	mov	r3, r18
 488:	19 c0       	rjmp	.+50     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 48a:	36 fe       	sbrs	r3, 6
 48c:	06 c0       	rjmp	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48e:	8a e0       	ldi	r24, 0x0A	; 10
 490:	98 9e       	mul	r9, r24
 492:	20 0d       	add	r18, r0
 494:	11 24       	eor	r1, r1
 496:	92 2e       	mov	r9, r18
 498:	11 c0       	rjmp	.+34     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 49a:	ea e0       	ldi	r30, 0x0A	; 10
 49c:	2e 9e       	mul	r2, r30
 49e:	20 0d       	add	r18, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	22 2e       	mov	r2, r18
 4a4:	f3 2d       	mov	r31, r3
 4a6:	f0 62       	ori	r31, 0x20	; 32
 4a8:	3f 2e       	mov	r3, r31
 4aa:	08 c0       	rjmp	.+16     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4ac:	8c 36       	cpi	r24, 0x6C	; 108
 4ae:	21 f4       	brne	.+8      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b0:	83 2d       	mov	r24, r3
 4b2:	80 68       	ori	r24, 0x80	; 128
 4b4:	38 2e       	mov	r3, r24
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b8:	88 36       	cpi	r24, 0x68	; 104
 4ba:	41 f4       	brne	.+16     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4bc:	f7 01       	movw	r30, r14
 4be:	93 fd       	sbrc	r25, 3
 4c0:	85 91       	lpm	r24, Z+
 4c2:	93 ff       	sbrs	r25, 3
 4c4:	81 91       	ld	r24, Z+
 4c6:	7f 01       	movw	r14, r30
 4c8:	81 11       	cpse	r24, r1
 4ca:	b3 cf       	rjmp	.-154    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 4cc:	98 2f       	mov	r25, r24
 4ce:	9f 7d       	andi	r25, 0xDF	; 223
 4d0:	95 54       	subi	r25, 0x45	; 69
 4d2:	93 30       	cpi	r25, 0x03	; 3
 4d4:	28 f4       	brcc	.+10     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d6:	0c 5f       	subi	r16, 0xFC	; 252
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	9f e3       	ldi	r25, 0x3F	; 63
 4dc:	99 83       	std	Y+1, r25	; 0x01
 4de:	0d c0       	rjmp	.+26     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4e0:	83 36       	cpi	r24, 0x63	; 99
 4e2:	31 f0       	breq	.+12     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e4:	83 37       	cpi	r24, 0x73	; 115
 4e6:	71 f0       	breq	.+28     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e8:	83 35       	cpi	r24, 0x53	; 83
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ec:	55 c0       	rjmp	.+170    	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 4ee:	20 c0       	rjmp	.+64     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 4f0:	f8 01       	movw	r30, r16
 4f2:	80 81       	ld	r24, Z
 4f4:	89 83       	std	Y+1, r24	; 0x01
 4f6:	0e 5f       	subi	r16, 0xFE	; 254
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	88 24       	eor	r8, r8
 4fc:	83 94       	inc	r8
 4fe:	91 2c       	mov	r9, r1
 500:	53 01       	movw	r10, r6
 502:	12 c0       	rjmp	.+36     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 504:	28 01       	movw	r4, r16
 506:	f2 e0       	ldi	r31, 0x02	; 2
 508:	4f 0e       	add	r4, r31
 50a:	51 1c       	adc	r5, r1
 50c:	f8 01       	movw	r30, r16
 50e:	a0 80       	ld	r10, Z
 510:	b1 80       	ldd	r11, Z+1	; 0x01
 512:	36 fe       	sbrs	r3, 6
 514:	03 c0       	rjmp	.+6      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 516:	69 2d       	mov	r22, r9
 518:	70 e0       	ldi	r23, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51c:	6f ef       	ldi	r22, 0xFF	; 255
 51e:	7f ef       	ldi	r23, 0xFF	; 255
 520:	c5 01       	movw	r24, r10
 522:	4e d1       	rcall	.+668    	; 0x7c0 <strnlen>
 524:	4c 01       	movw	r8, r24
 526:	82 01       	movw	r16, r4
 528:	f3 2d       	mov	r31, r3
 52a:	ff 77       	andi	r31, 0x7F	; 127
 52c:	3f 2e       	mov	r3, r31
 52e:	15 c0       	rjmp	.+42     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 530:	28 01       	movw	r4, r16
 532:	22 e0       	ldi	r18, 0x02	; 2
 534:	42 0e       	add	r4, r18
 536:	51 1c       	adc	r5, r1
 538:	f8 01       	movw	r30, r16
 53a:	a0 80       	ld	r10, Z
 53c:	b1 80       	ldd	r11, Z+1	; 0x01
 53e:	36 fe       	sbrs	r3, 6
 540:	03 c0       	rjmp	.+6      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 542:	69 2d       	mov	r22, r9
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 548:	6f ef       	ldi	r22, 0xFF	; 255
 54a:	7f ef       	ldi	r23, 0xFF	; 255
 54c:	c5 01       	movw	r24, r10
 54e:	2d d1       	rcall	.+602    	; 0x7aa <strnlen_P>
 550:	4c 01       	movw	r8, r24
 552:	f3 2d       	mov	r31, r3
 554:	f0 68       	ori	r31, 0x80	; 128
 556:	3f 2e       	mov	r3, r31
 558:	82 01       	movw	r16, r4
 55a:	33 fc       	sbrc	r3, 3
 55c:	19 c0       	rjmp	.+50     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 55e:	82 2d       	mov	r24, r2
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	88 16       	cp	r8, r24
 564:	99 06       	cpc	r9, r25
 566:	a0 f4       	brcc	.+40     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 568:	b6 01       	movw	r22, r12
 56a:	80 e2       	ldi	r24, 0x20	; 32
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	33 d1       	rcall	.+614    	; 0x7d6 <fputc>
 570:	2a 94       	dec	r2
 572:	f5 cf       	rjmp	.-22     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 574:	f5 01       	movw	r30, r10
 576:	37 fc       	sbrc	r3, 7
 578:	85 91       	lpm	r24, Z+
 57a:	37 fe       	sbrs	r3, 7
 57c:	81 91       	ld	r24, Z+
 57e:	5f 01       	movw	r10, r30
 580:	b6 01       	movw	r22, r12
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	28 d1       	rcall	.+592    	; 0x7d6 <fputc>
 586:	21 10       	cpse	r2, r1
 588:	2a 94       	dec	r2
 58a:	21 e0       	ldi	r18, 0x01	; 1
 58c:	82 1a       	sub	r8, r18
 58e:	91 08       	sbc	r9, r1
 590:	81 14       	cp	r8, r1
 592:	91 04       	cpc	r9, r1
 594:	79 f7       	brne	.-34     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 596:	e1 c0       	rjmp	.+450    	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 598:	84 36       	cpi	r24, 0x64	; 100
 59a:	11 f0       	breq	.+4      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 59c:	89 36       	cpi	r24, 0x69	; 105
 59e:	39 f5       	brne	.+78     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5a0:	f8 01       	movw	r30, r16
 5a2:	37 fe       	sbrs	r3, 7
 5a4:	07 c0       	rjmp	.+14     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a6:	60 81       	ld	r22, Z
 5a8:	71 81       	ldd	r23, Z+1	; 0x01
 5aa:	82 81       	ldd	r24, Z+2	; 0x02
 5ac:	93 81       	ldd	r25, Z+3	; 0x03
 5ae:	0c 5f       	subi	r16, 0xFC	; 252
 5b0:	1f 4f       	sbci	r17, 0xFF	; 255
 5b2:	08 c0       	rjmp	.+16     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b4:	60 81       	ld	r22, Z
 5b6:	71 81       	ldd	r23, Z+1	; 0x01
 5b8:	07 2e       	mov	r0, r23
 5ba:	00 0c       	add	r0, r0
 5bc:	88 0b       	sbc	r24, r24
 5be:	99 0b       	sbc	r25, r25
 5c0:	0e 5f       	subi	r16, 0xFE	; 254
 5c2:	1f 4f       	sbci	r17, 0xFF	; 255
 5c4:	f3 2d       	mov	r31, r3
 5c6:	ff 76       	andi	r31, 0x6F	; 111
 5c8:	3f 2e       	mov	r3, r31
 5ca:	97 ff       	sbrs	r25, 7
 5cc:	09 c0       	rjmp	.+18     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ce:	90 95       	com	r25
 5d0:	80 95       	com	r24
 5d2:	70 95       	com	r23
 5d4:	61 95       	neg	r22
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	f0 68       	ori	r31, 0x80	; 128
 5de:	3f 2e       	mov	r3, r31
 5e0:	2a e0       	ldi	r18, 0x0A	; 10
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	a3 01       	movw	r20, r6
 5e6:	33 d1       	rcall	.+614    	; 0x84e <__ultoa_invert>
 5e8:	88 2e       	mov	r8, r24
 5ea:	86 18       	sub	r8, r6
 5ec:	44 c0       	rjmp	.+136    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 5ee:	85 37       	cpi	r24, 0x75	; 117
 5f0:	31 f4       	brne	.+12     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f2:	23 2d       	mov	r18, r3
 5f4:	2f 7e       	andi	r18, 0xEF	; 239
 5f6:	b2 2e       	mov	r11, r18
 5f8:	2a e0       	ldi	r18, 0x0A	; 10
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	25 c0       	rjmp	.+74     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 5fe:	93 2d       	mov	r25, r3
 600:	99 7f       	andi	r25, 0xF9	; 249
 602:	b9 2e       	mov	r11, r25
 604:	8f 36       	cpi	r24, 0x6F	; 111
 606:	c1 f0       	breq	.+48     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 608:	18 f4       	brcc	.+6      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60a:	88 35       	cpi	r24, 0x58	; 88
 60c:	79 f0       	breq	.+30     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 60e:	ae c0       	rjmp	.+348    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 610:	80 37       	cpi	r24, 0x70	; 112
 612:	19 f0       	breq	.+6      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 614:	88 37       	cpi	r24, 0x78	; 120
 616:	21 f0       	breq	.+8      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 618:	a9 c0       	rjmp	.+338    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 61a:	e9 2f       	mov	r30, r25
 61c:	e0 61       	ori	r30, 0x10	; 16
 61e:	be 2e       	mov	r11, r30
 620:	b4 fe       	sbrs	r11, 4
 622:	0d c0       	rjmp	.+26     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 624:	fb 2d       	mov	r31, r11
 626:	f4 60       	ori	r31, 0x04	; 4
 628:	bf 2e       	mov	r11, r31
 62a:	09 c0       	rjmp	.+18     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 62c:	34 fe       	sbrs	r3, 4
 62e:	0a c0       	rjmp	.+20     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 630:	29 2f       	mov	r18, r25
 632:	26 60       	ori	r18, 0x06	; 6
 634:	b2 2e       	mov	r11, r18
 636:	06 c0       	rjmp	.+12     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 638:	28 e0       	ldi	r18, 0x08	; 8
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	05 c0       	rjmp	.+10     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63e:	20 e1       	ldi	r18, 0x10	; 16
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 644:	20 e1       	ldi	r18, 0x10	; 16
 646:	32 e0       	ldi	r19, 0x02	; 2
 648:	f8 01       	movw	r30, r16
 64a:	b7 fe       	sbrs	r11, 7
 64c:	07 c0       	rjmp	.+14     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 64e:	60 81       	ld	r22, Z
 650:	71 81       	ldd	r23, Z+1	; 0x01
 652:	82 81       	ldd	r24, Z+2	; 0x02
 654:	93 81       	ldd	r25, Z+3	; 0x03
 656:	0c 5f       	subi	r16, 0xFC	; 252
 658:	1f 4f       	sbci	r17, 0xFF	; 255
 65a:	06 c0       	rjmp	.+12     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 65c:	60 81       	ld	r22, Z
 65e:	71 81       	ldd	r23, Z+1	; 0x01
 660:	80 e0       	ldi	r24, 0x00	; 0
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 5f       	subi	r16, 0xFE	; 254
 666:	1f 4f       	sbci	r17, 0xFF	; 255
 668:	a3 01       	movw	r20, r6
 66a:	f1 d0       	rcall	.+482    	; 0x84e <__ultoa_invert>
 66c:	88 2e       	mov	r8, r24
 66e:	86 18       	sub	r8, r6
 670:	fb 2d       	mov	r31, r11
 672:	ff 77       	andi	r31, 0x7F	; 127
 674:	3f 2e       	mov	r3, r31
 676:	36 fe       	sbrs	r3, 6
 678:	0d c0       	rjmp	.+26     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 67a:	23 2d       	mov	r18, r3
 67c:	2e 7f       	andi	r18, 0xFE	; 254
 67e:	a2 2e       	mov	r10, r18
 680:	89 14       	cp	r8, r9
 682:	58 f4       	brcc	.+22     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 684:	34 fe       	sbrs	r3, 4
 686:	0b c0       	rjmp	.+22     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 688:	32 fc       	sbrc	r3, 2
 68a:	09 c0       	rjmp	.+18     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 68c:	83 2d       	mov	r24, r3
 68e:	8e 7e       	andi	r24, 0xEE	; 238
 690:	a8 2e       	mov	r10, r24
 692:	05 c0       	rjmp	.+10     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 694:	b8 2c       	mov	r11, r8
 696:	a3 2c       	mov	r10, r3
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 69a:	b8 2c       	mov	r11, r8
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 69e:	b9 2c       	mov	r11, r9
 6a0:	a4 fe       	sbrs	r10, 4
 6a2:	0f c0       	rjmp	.+30     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a4:	fe 01       	movw	r30, r28
 6a6:	e8 0d       	add	r30, r8
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	80 33       	cpi	r24, 0x30	; 48
 6ae:	21 f4       	brne	.+8      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6b0:	9a 2d       	mov	r25, r10
 6b2:	99 7e       	andi	r25, 0xE9	; 233
 6b4:	a9 2e       	mov	r10, r25
 6b6:	09 c0       	rjmp	.+18     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6b8:	a2 fe       	sbrs	r10, 2
 6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 6bc:	b3 94       	inc	r11
 6be:	b3 94       	inc	r11
 6c0:	04 c0       	rjmp	.+8      	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6c2:	8a 2d       	mov	r24, r10
 6c4:	86 78       	andi	r24, 0x86	; 134
 6c6:	09 f0       	breq	.+2      	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6c8:	b3 94       	inc	r11
 6ca:	a3 fc       	sbrc	r10, 3
 6cc:	10 c0       	rjmp	.+32     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ce:	a0 fe       	sbrs	r10, 0
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6d2:	b2 14       	cp	r11, r2
 6d4:	80 f4       	brcc	.+32     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6d6:	28 0c       	add	r2, r8
 6d8:	92 2c       	mov	r9, r2
 6da:	9b 18       	sub	r9, r11
 6dc:	0d c0       	rjmp	.+26     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6de:	b2 14       	cp	r11, r2
 6e0:	58 f4       	brcc	.+22     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6e2:	b6 01       	movw	r22, r12
 6e4:	80 e2       	ldi	r24, 0x20	; 32
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	76 d0       	rcall	.+236    	; 0x7d6 <fputc>
 6ea:	b3 94       	inc	r11
 6ec:	f8 cf       	rjmp	.-16     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6ee:	b2 14       	cp	r11, r2
 6f0:	18 f4       	brcc	.+6      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6f2:	2b 18       	sub	r2, r11
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f6:	98 2c       	mov	r9, r8
 6f8:	21 2c       	mov	r2, r1
 6fa:	a4 fe       	sbrs	r10, 4
 6fc:	0f c0       	rjmp	.+30     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 6fe:	b6 01       	movw	r22, r12
 700:	80 e3       	ldi	r24, 0x30	; 48
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	68 d0       	rcall	.+208    	; 0x7d6 <fputc>
 706:	a2 fe       	sbrs	r10, 2
 708:	16 c0       	rjmp	.+44     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 70a:	a1 fc       	sbrc	r10, 1
 70c:	03 c0       	rjmp	.+6      	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 70e:	88 e7       	ldi	r24, 0x78	; 120
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	02 c0       	rjmp	.+4      	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 714:	88 e5       	ldi	r24, 0x58	; 88
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	b6 01       	movw	r22, r12
 71a:	0c c0       	rjmp	.+24     	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 71c:	8a 2d       	mov	r24, r10
 71e:	86 78       	andi	r24, 0x86	; 134
 720:	51 f0       	breq	.+20     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 722:	a1 fe       	sbrs	r10, 1
 724:	02 c0       	rjmp	.+4      	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 726:	8b e2       	ldi	r24, 0x2B	; 43
 728:	01 c0       	rjmp	.+2      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 72a:	80 e2       	ldi	r24, 0x20	; 32
 72c:	a7 fc       	sbrc	r10, 7
 72e:	8d e2       	ldi	r24, 0x2D	; 45
 730:	b6 01       	movw	r22, r12
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	50 d0       	rcall	.+160    	; 0x7d6 <fputc>
 736:	89 14       	cp	r8, r9
 738:	30 f4       	brcc	.+12     	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
 73a:	b6 01       	movw	r22, r12
 73c:	80 e3       	ldi	r24, 0x30	; 48
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	4a d0       	rcall	.+148    	; 0x7d6 <fputc>
 742:	9a 94       	dec	r9
 744:	f8 cf       	rjmp	.-16     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 746:	8a 94       	dec	r8
 748:	f3 01       	movw	r30, r6
 74a:	e8 0d       	add	r30, r8
 74c:	f1 1d       	adc	r31, r1
 74e:	80 81       	ld	r24, Z
 750:	b6 01       	movw	r22, r12
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	40 d0       	rcall	.+128    	; 0x7d6 <fputc>
 756:	81 10       	cpse	r8, r1
 758:	f6 cf       	rjmp	.-20     	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
 75a:	22 20       	and	r2, r2
 75c:	09 f4       	brne	.+2      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 75e:	4e ce       	rjmp	.-868    	; 0x3fc <vfprintf+0x4c>
 760:	b6 01       	movw	r22, r12
 762:	80 e2       	ldi	r24, 0x20	; 32
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	37 d0       	rcall	.+110    	; 0x7d6 <fputc>
 768:	2a 94       	dec	r2
 76a:	f7 cf       	rjmp	.-18     	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 76c:	f6 01       	movw	r30, r12
 76e:	86 81       	ldd	r24, Z+6	; 0x06
 770:	97 81       	ldd	r25, Z+7	; 0x07
 772:	02 c0       	rjmp	.+4      	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 774:	8f ef       	ldi	r24, 0xFF	; 255
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	2b 96       	adiw	r28, 0x0b	; 11
 77a:	0f b6       	in	r0, 0x3f	; 63
 77c:	f8 94       	cli
 77e:	de bf       	out	0x3e, r29	; 62
 780:	0f be       	out	0x3f, r0	; 63
 782:	cd bf       	out	0x3d, r28	; 61
 784:	df 91       	pop	r29
 786:	cf 91       	pop	r28
 788:	1f 91       	pop	r17
 78a:	0f 91       	pop	r16
 78c:	ff 90       	pop	r15
 78e:	ef 90       	pop	r14
 790:	df 90       	pop	r13
 792:	cf 90       	pop	r12
 794:	bf 90       	pop	r11
 796:	af 90       	pop	r10
 798:	9f 90       	pop	r9
 79a:	8f 90       	pop	r8
 79c:	7f 90       	pop	r7
 79e:	6f 90       	pop	r6
 7a0:	5f 90       	pop	r5
 7a2:	4f 90       	pop	r4
 7a4:	3f 90       	pop	r3
 7a6:	2f 90       	pop	r2
 7a8:	08 95       	ret

000007aa <strnlen_P>:
 7aa:	fc 01       	movw	r30, r24
 7ac:	05 90       	lpm	r0, Z+
 7ae:	61 50       	subi	r22, 0x01	; 1
 7b0:	70 40       	sbci	r23, 0x00	; 0
 7b2:	01 10       	cpse	r0, r1
 7b4:	d8 f7       	brcc	.-10     	; 0x7ac <strnlen_P+0x2>
 7b6:	80 95       	com	r24
 7b8:	90 95       	com	r25
 7ba:	8e 0f       	add	r24, r30
 7bc:	9f 1f       	adc	r25, r31
 7be:	08 95       	ret

000007c0 <strnlen>:
 7c0:	fc 01       	movw	r30, r24
 7c2:	61 50       	subi	r22, 0x01	; 1
 7c4:	70 40       	sbci	r23, 0x00	; 0
 7c6:	01 90       	ld	r0, Z+
 7c8:	01 10       	cpse	r0, r1
 7ca:	d8 f7       	brcc	.-10     	; 0x7c2 <strnlen+0x2>
 7cc:	80 95       	com	r24
 7ce:	90 95       	com	r25
 7d0:	8e 0f       	add	r24, r30
 7d2:	9f 1f       	adc	r25, r31
 7d4:	08 95       	ret

000007d6 <fputc>:
 7d6:	0f 93       	push	r16
 7d8:	1f 93       	push	r17
 7da:	cf 93       	push	r28
 7dc:	df 93       	push	r29
 7de:	fb 01       	movw	r30, r22
 7e0:	23 81       	ldd	r18, Z+3	; 0x03
 7e2:	21 fd       	sbrc	r18, 1
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <fputc+0x16>
 7e6:	8f ef       	ldi	r24, 0xFF	; 255
 7e8:	9f ef       	ldi	r25, 0xFF	; 255
 7ea:	2c c0       	rjmp	.+88     	; 0x844 <fputc+0x6e>
 7ec:	22 ff       	sbrs	r18, 2
 7ee:	16 c0       	rjmp	.+44     	; 0x81c <fputc+0x46>
 7f0:	46 81       	ldd	r20, Z+6	; 0x06
 7f2:	57 81       	ldd	r21, Z+7	; 0x07
 7f4:	24 81       	ldd	r18, Z+4	; 0x04
 7f6:	35 81       	ldd	r19, Z+5	; 0x05
 7f8:	42 17       	cp	r20, r18
 7fa:	53 07       	cpc	r21, r19
 7fc:	44 f4       	brge	.+16     	; 0x80e <fputc+0x38>
 7fe:	a0 81       	ld	r26, Z
 800:	b1 81       	ldd	r27, Z+1	; 0x01
 802:	9d 01       	movw	r18, r26
 804:	2f 5f       	subi	r18, 0xFF	; 255
 806:	3f 4f       	sbci	r19, 0xFF	; 255
 808:	31 83       	std	Z+1, r19	; 0x01
 80a:	20 83       	st	Z, r18
 80c:	8c 93       	st	X, r24
 80e:	26 81       	ldd	r18, Z+6	; 0x06
 810:	37 81       	ldd	r19, Z+7	; 0x07
 812:	2f 5f       	subi	r18, 0xFF	; 255
 814:	3f 4f       	sbci	r19, 0xFF	; 255
 816:	37 83       	std	Z+7, r19	; 0x07
 818:	26 83       	std	Z+6, r18	; 0x06
 81a:	14 c0       	rjmp	.+40     	; 0x844 <fputc+0x6e>
 81c:	8b 01       	movw	r16, r22
 81e:	ec 01       	movw	r28, r24
 820:	fb 01       	movw	r30, r22
 822:	00 84       	ldd	r0, Z+8	; 0x08
 824:	f1 85       	ldd	r31, Z+9	; 0x09
 826:	e0 2d       	mov	r30, r0
 828:	09 95       	icall
 82a:	89 2b       	or	r24, r25
 82c:	e1 f6       	brne	.-72     	; 0x7e6 <fputc+0x10>
 82e:	d8 01       	movw	r26, r16
 830:	16 96       	adiw	r26, 0x06	; 6
 832:	8d 91       	ld	r24, X+
 834:	9c 91       	ld	r25, X
 836:	17 97       	sbiw	r26, 0x07	; 7
 838:	01 96       	adiw	r24, 0x01	; 1
 83a:	17 96       	adiw	r26, 0x07	; 7
 83c:	9c 93       	st	X, r25
 83e:	8e 93       	st	-X, r24
 840:	16 97       	sbiw	r26, 0x06	; 6
 842:	ce 01       	movw	r24, r28
 844:	df 91       	pop	r29
 846:	cf 91       	pop	r28
 848:	1f 91       	pop	r17
 84a:	0f 91       	pop	r16
 84c:	08 95       	ret

0000084e <__ultoa_invert>:
 84e:	fa 01       	movw	r30, r20
 850:	aa 27       	eor	r26, r26
 852:	28 30       	cpi	r18, 0x08	; 8
 854:	51 f1       	breq	.+84     	; 0x8aa <__ultoa_invert+0x5c>
 856:	20 31       	cpi	r18, 0x10	; 16
 858:	81 f1       	breq	.+96     	; 0x8ba <__ultoa_invert+0x6c>
 85a:	e8 94       	clt
 85c:	6f 93       	push	r22
 85e:	6e 7f       	andi	r22, 0xFE	; 254
 860:	6e 5f       	subi	r22, 0xFE	; 254
 862:	7f 4f       	sbci	r23, 0xFF	; 255
 864:	8f 4f       	sbci	r24, 0xFF	; 255
 866:	9f 4f       	sbci	r25, 0xFF	; 255
 868:	af 4f       	sbci	r26, 0xFF	; 255
 86a:	b1 e0       	ldi	r27, 0x01	; 1
 86c:	3e d0       	rcall	.+124    	; 0x8ea <__ultoa_invert+0x9c>
 86e:	b4 e0       	ldi	r27, 0x04	; 4
 870:	3c d0       	rcall	.+120    	; 0x8ea <__ultoa_invert+0x9c>
 872:	67 0f       	add	r22, r23
 874:	78 1f       	adc	r23, r24
 876:	89 1f       	adc	r24, r25
 878:	9a 1f       	adc	r25, r26
 87a:	a1 1d       	adc	r26, r1
 87c:	68 0f       	add	r22, r24
 87e:	79 1f       	adc	r23, r25
 880:	8a 1f       	adc	r24, r26
 882:	91 1d       	adc	r25, r1
 884:	a1 1d       	adc	r26, r1
 886:	6a 0f       	add	r22, r26
 888:	71 1d       	adc	r23, r1
 88a:	81 1d       	adc	r24, r1
 88c:	91 1d       	adc	r25, r1
 88e:	a1 1d       	adc	r26, r1
 890:	20 d0       	rcall	.+64     	; 0x8d2 <__ultoa_invert+0x84>
 892:	09 f4       	brne	.+2      	; 0x896 <__ultoa_invert+0x48>
 894:	68 94       	set
 896:	3f 91       	pop	r19
 898:	2a e0       	ldi	r18, 0x0A	; 10
 89a:	26 9f       	mul	r18, r22
 89c:	11 24       	eor	r1, r1
 89e:	30 19       	sub	r19, r0
 8a0:	30 5d       	subi	r19, 0xD0	; 208
 8a2:	31 93       	st	Z+, r19
 8a4:	de f6       	brtc	.-74     	; 0x85c <__ultoa_invert+0xe>
 8a6:	cf 01       	movw	r24, r30
 8a8:	08 95       	ret
 8aa:	46 2f       	mov	r20, r22
 8ac:	47 70       	andi	r20, 0x07	; 7
 8ae:	40 5d       	subi	r20, 0xD0	; 208
 8b0:	41 93       	st	Z+, r20
 8b2:	b3 e0       	ldi	r27, 0x03	; 3
 8b4:	0f d0       	rcall	.+30     	; 0x8d4 <__ultoa_invert+0x86>
 8b6:	c9 f7       	brne	.-14     	; 0x8aa <__ultoa_invert+0x5c>
 8b8:	f6 cf       	rjmp	.-20     	; 0x8a6 <__ultoa_invert+0x58>
 8ba:	46 2f       	mov	r20, r22
 8bc:	4f 70       	andi	r20, 0x0F	; 15
 8be:	40 5d       	subi	r20, 0xD0	; 208
 8c0:	4a 33       	cpi	r20, 0x3A	; 58
 8c2:	18 f0       	brcs	.+6      	; 0x8ca <__ultoa_invert+0x7c>
 8c4:	49 5d       	subi	r20, 0xD9	; 217
 8c6:	31 fd       	sbrc	r19, 1
 8c8:	40 52       	subi	r20, 0x20	; 32
 8ca:	41 93       	st	Z+, r20
 8cc:	02 d0       	rcall	.+4      	; 0x8d2 <__ultoa_invert+0x84>
 8ce:	a9 f7       	brne	.-22     	; 0x8ba <__ultoa_invert+0x6c>
 8d0:	ea cf       	rjmp	.-44     	; 0x8a6 <__ultoa_invert+0x58>
 8d2:	b4 e0       	ldi	r27, 0x04	; 4
 8d4:	a6 95       	lsr	r26
 8d6:	97 95       	ror	r25
 8d8:	87 95       	ror	r24
 8da:	77 95       	ror	r23
 8dc:	67 95       	ror	r22
 8de:	ba 95       	dec	r27
 8e0:	c9 f7       	brne	.-14     	; 0x8d4 <__ultoa_invert+0x86>
 8e2:	00 97       	sbiw	r24, 0x00	; 0
 8e4:	61 05       	cpc	r22, r1
 8e6:	71 05       	cpc	r23, r1
 8e8:	08 95       	ret
 8ea:	9b 01       	movw	r18, r22
 8ec:	ac 01       	movw	r20, r24
 8ee:	0a 2e       	mov	r0, r26
 8f0:	06 94       	lsr	r0
 8f2:	57 95       	ror	r21
 8f4:	47 95       	ror	r20
 8f6:	37 95       	ror	r19
 8f8:	27 95       	ror	r18
 8fa:	ba 95       	dec	r27
 8fc:	c9 f7       	brne	.-14     	; 0x8f0 <__ultoa_invert+0xa2>
 8fe:	62 0f       	add	r22, r18
 900:	73 1f       	adc	r23, r19
 902:	84 1f       	adc	r24, r20
 904:	95 1f       	adc	r25, r21
 906:	a0 1d       	adc	r26, r0
 908:	08 95       	ret

0000090a <_exit>:
 90a:	f8 94       	cli

0000090c <__stop_program>:
 90c:	ff cf       	rjmp	.-2      	; 0x90c <__stop_program>
